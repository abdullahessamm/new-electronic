import{s as u,x as n}from"./index-f80301b3.js";const l=u("users",{state:()=>({users:[]}),getters:{numOfUsers:a=>a.users.length,search:a=>e=>a.users.filter(s=>`${s.f_name} ${s.l_name}`.match(new RegExp(e.trim()))||s.email.match(new RegExp(e))||s.username.match(new RegExp(e))),getUser:a=>e=>a.users.find(s=>s.id==e)},actions:{async initialize(){const a=await n.get("users");this.users=a.data.users},async refresh(){return this.initialize()},async create(a){const e=await n.put("users",a);this.users.push(e.data.user)},async delete(a){await n.delete(`users/${a.id}`);const e=this.users.findIndex(s=>s.id===a.id);this.users.splice(e,1)},async update(a,e){const s={},i=this.getUser(a);e.f_name!==i.f_name&&(s.f_name=e.f_name),e.l_name!==i.l_name&&(s.l_name=e.l_name),e.email!==i.email&&(s.email=e.email),e.username!==i.username&&(s.username=e.username),e.password&&(s.password=e.password),s.abilities=e.abilities;const r=this.users.findIndex(t=>t.id==a);await n.patch(`users/${a}`,s),s.abilities=s.abilities.join(","),Object.keys(s).forEach(t=>{this.users[r][t]=s[t]})}}});export{l as u};
