import{s as c,x as r}from"./index-549cefdd.js";const u=c("exports",{state:()=>({exports:[]}),getters:{filterByDate:e=>(t,s)=>(t==null||t.setHours(0),t==null||t.setMinutes(0),t==null||t.setSeconds(0),s==null||s.setHours(0),s==null||s.setMinutes(0),s==null||s.setSeconds(0),e.exports.filter(i=>{const n=new Date(i.created_at);return n.setHours(0),n.setMinutes(0),n.setSeconds(0),!t&&!s?!t&&!s:s?n>=t&&n<=s:n>=t})),sumGroupByMonth:e=>{const t={};return e.exports.forEach(s=>{const i=`${new Date(s.created_at).getMonth()+1}/${new Date(s.created_at).getFullYear()}`;t[i]?t[i].push(s):t[i]=[s]}),Object.keys(t).forEach(s=>{const i=t[s];let n=0;i.forEach(p=>n+=parseInt(p.amount)),t[s]=n}),t}},actions:{async initialize(){const e=await r.get("exports");this.exports=e.data.exports},async refresh(){return this.initialize()},async create(e){const{user:t}=e;delete e.user;const s=await r.post("exports",e);this.exports.unshift({...s.data.export,user:t})},async delete(e){await r.delete(`exports/${e.id}`);const t=this.exports.findIndex(s=>s.id===e.id);this.exports.splice(t,1)},async update(e,t){await r.patch(`exports/${e}`,t),this.exports[this.exports.findIndex(s=>s.id==e)]={...this.exports[this.exports.findIndex(s=>s.id==e)],...t}}}});export{u};
